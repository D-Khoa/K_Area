<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBack.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>